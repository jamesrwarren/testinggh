name: "[Workflow] Path to Live"

on:
  push:
    branches:
      - main

permissions:
  actions: read
  checks: read
  contents: write
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: write
  statuses: none

jobs:
  branch_name:
    runs-on: ubuntu-latest
    name: Extract branch name
    outputs:
      raw_branch: ${{ steps.extract_branch.outputs.branch_raw }}
      formatted_branch: ${{ steps.extract_branch.outputs.branch_formatted }}
      pr_body: ${{ steps.pr_details.outputs.pr_body }}
      pr_title: ${{ steps.pr_details.outputs.pr_title }}
    steps:
      - name: Extract branch
        shell: bash
        run: |
          echo "##[set-output name=branch_raw;]$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF##*/}})"
          echo "##[set-output name=branch_formatted;]$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF##*/}} | tr -cd '[:alnum:]')"
        id: extract_branch
      - name: Output PR title and body
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          PR_URL: ${{ github.event.repository.pulls_url }}
        run: |
          echo "COMMIT_MESSAGE"
          echo "PR_URL"
          PR_NUMBER="$(echo "${COMMIT_MESSAGE}" | grep -Eo '#\S+' | tr -d '#')"
          BASE_PR_URL="$(echo "${PR_URL}" | awk -F'/pulls' '{print $1"/pulls"}')"
          URL_FINAL="${BASE_PR_URL}/${PR_NUMBER}"
          echo $URL_FINAL
          BODY="$(curl -s $URL_FINAL | jq .body)"
          TITLE="$(curl -s $URL_FINAL | jq .title)"
          echo "##[set-output name=pr_body;]$(echo ${BODY})"
          echo "##[set-output name=pr_title;]$(echo ${TITLE} | tr -cd '[:alnum:]')"
        id: pr_details
  #      - name: Dump GitHub context
  #        env:
  #          GITHUB_CONTEXT: ${{ toJson(github) }}
  #        run: |
  #          echo "$GITHUB_CONTEXT"

  create_tags:
    name: Create Tags
    needs: ['branch_name']
    uses: ./.github/workflows/tags_job.yml
    with:
      branch_name: ${{ needs.branch_name.outputs.raw_branch }}
    secrets:
      source_github_token: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    name: Create Release
    needs: ['create_tags', 'branch_name']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          PR_TITLE: ${{ needs.branch_name.outputs.pr_title }}
          PR_BODY: ${{ needs.branch_name.outputs.pr_body }}
        with:
          tag_name: ${{ needs.create_tags.outputs.version_tag }}
          release_name: Release ${{ needs.create_tags.outputs.version_tag }}
          body: |
            ${{ needs.branch_name.outputs.pr_title }}
            ${{ needs.branch_name.outputs.pr_body }}
          draft: false
          prerelease: false

